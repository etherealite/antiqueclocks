#!/bin/bash
set -eu -m

: "${APACHE_CONFDIR:=/etc/apache2}"
: "${APACHE_ENVVARS:=$APACHE_CONFDIR/envvars}"
if test -f "$APACHE_ENVVARS"; then
	. "$APACHE_ENVVARS"
fi

# Apache gets grumpy about PID files pre-existing
: "${APACHE_RUN_DIR:=/var/run/apache2}"
: "${APACHE_PID_FILE:=$APACHE_RUN_DIR/apache2.pid}"
rm -f "$APACHE_PID_FILE"

# create missing directories
# (especially APACHE_RUN_DIR, APACHE_LOCK_DIR, and APACHE_LOG_DIR)
for e in "${!APACHE_@}"; do
	if [[ "$e" == *_DIR ]] && [[ "${!e}" == /* ]]; then
		# handle "/var/lock" being a symlink to "/run/lock", but "/run/lock" not existing beforehand, so "/var/lock/something" fails to mkdir
		#   mkdir: cannot create directory '/var/lock': File exists
		dir="${!e}"
		while [ "$dir" != "$(dirname "$dir")" ]; do
			dir="$(dirname "$dir")"
			if [ -d "$dir" ]; then
				break
			fi
			absDir="$(readlink -f "$dir" 2>/dev/null || :)"
			if [ -n "$absDir" ]; then
				mkdir -p "$absDir"
			fi
		done

		mkdir -p "${!e}"
	fi
done


APACHE_SERVER_NAME=localhost



trap 'echo "... Received SIGWINCH";' 28
trap shutdown_trap TERM INT EXIT


# Shutdown of the process group
shutdown_trap() {
    trap - TERM # Avoid recursive traps
    kill $PID
    exit
}

# Supervise process
# run_and_wait() {
#     while true ; do
#         apache2 -DFOREGROUND "$@"&
#         PID=$!
#         echo "Running on PID: $process_id"
#         wait $PID
#         echo "'$@' terminated, restarting"
#     done
# }

# run_and_wait

apache2 -DFOREGROUND "$@"&
PID=$!

echo "Running Apache on PID: $PID"

while true; do
    sleep 1
done

# Periodically check zombie
# while true ; do
#     sleep 1
#     #ps -A -ostat,ppid | grep -e '[zZ]' | awk '{ print $2 }' | xargs -r kill -9
# done


